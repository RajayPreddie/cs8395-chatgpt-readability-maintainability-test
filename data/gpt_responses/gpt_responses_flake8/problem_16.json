{
    "id": "problem_16",
    "description": "Act as a Python developer and create a Python program that adheres to the flake8 coding standard. Here's an example snippet:\n\n# Example Snippet for Flake8\ndef find_max(numbers):\n    \"\"\"Find the maximum number in a list.\"\"\"\n    return max(numbers) if numbers else None\n\nEnsure your code is clean, readable, and adheres to flake8 standards. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: frozenset,GarbageCollection.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\nimport gc\n\n\ndef find_non_referenced_frozensets():\n    \"\"\"\n    Find frozenset instances that are not referenced by other objects,\n    indicating they are ready for garbage collection.\n    \"\"\"\n    # Collect all objects that the garbage collector knows about\n    gc.collect()\n\n    # Create a list to store frozensets that are not referenced elsewhere\n    non_referenced_frozensets = []\n\n    # Iterate over all objects tracked by the garbage collector\n    for obj in gc.get_objects():\n        # Check if the object is an instance of frozenset and is unreachable\n        if isinstance(obj, frozenset) and not gc.get_referents(obj):\n            non_referenced_frozensets.append(obj)\n\n    return non_referenced_frozensets\n\n\n# Example usage\nif __name__ == \"__main__\":\n    # Create a frozenset which will not be referenced\n    some_frozenset = frozenset([1, 2, 3])\n    # Deliberately remove the only reference to the frozenset\n    del some_frozenset\n\n    # Find frozensets that are ready for garbage collection\n    garbage_frozensets = find_non_referenced_frozensets()\n    print(f\"Non-referenced frozensets ready for GC: {garbage_frozensets}\")\n",
    "tags": [
        "frozenset",
        "GarbageCollection",
        "Medium"
    ],
    "keywords": [
        "frozenset",
        "GarbageCollection"
    ],
    "difficulty": "Medium",
    "prompt_style_adherence": "flake8"
}