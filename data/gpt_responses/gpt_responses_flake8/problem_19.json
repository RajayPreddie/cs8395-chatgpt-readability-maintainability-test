{
    "id": "problem_19",
    "description": "Act as a Python developer and create a Python program that adheres to the flake8 coding standard. Here's an example snippet:\n\n# Example Snippet for Flake8\ndef find_max(numbers):\n    \"\"\"Find the maximum number in a list.\"\"\"\n    return max(numbers) if numbers else None\n\nEnsure your code is clean, readable, and adheres to flake8 standards. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: Global state,heapq,IdiomaticPython.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\nimport heapq\n\nclass GlobalState:\n    \"\"\"A class to manage a global state containing a heap.\"\"\"\n\n    def __init__(self):\n        self._heap = []\n\n    def add_number(self, number):\n        \"\"\"Add a number to the heap.\"\"\"\n        heapq.heappush(self._heap, number)\n\n    def get_max(self):\n        \"\"\"Return the maximum number in the heap.\"\"\"\n        if not self._heap:\n            return None\n        return heapq.nlargest(1, self._heap)[0]\n\n    def pop_max(self):\n        \"\"\"Pop and return the maximum number from the heap.\"\"\"\n        if not self._heap:\n            return None\n        return -heapq.heappop(self._heap)\n\n    def __str__(self):\n        \"\"\"Return the heap as a string.\"\"\"\n        return f\"Current heap: {self._heap}\"\n\n\ndef idiomatic_python_example():\n    \"\"\"Demonstrate idiomatic Python with list comprehensions and context managers.\"\"\"\n    numbers = [1, 2, 3, 4, 5]\n    # Idiomatic Python: using list comprehension for filtering\n    even_numbers = [num for num in numbers if num % 2 == 0]\n    print(f\"Even numbers: {even_numbers}\")\n\n    # Idiomatic Python: using a context manager for file operations\n    with open('example.txt', 'w') as file:\n        file.write('Hello, world!')\n\n\nif __name__ == \"__main__\":\n    # Example of using the GlobalState class\n    global_state = GlobalState()\n    global_state.add_number(10)\n    global_state.add_number(20)\n    global_state.add_number(15)\n\n    print(global_state.get_max())  # Should print 20\n    print(global_state.pop_max())  # Should remove and print 20\n    print(global_state)            # Should print the remaining heap\n\n    # Example of idiomatic Python usage\n    idiomatic_python_example()\n",
    "tags": [
        "Global state",
        "heapq",
        "IdiomaticPython",
        "Hard"
    ],
    "keywords": [
        "Global state",
        "heapq",
        "IdiomaticPython"
    ],
    "difficulty": "Hard",
    "prompt_style_adherence": "flake8"
}