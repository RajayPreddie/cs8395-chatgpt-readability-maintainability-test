{
    "id": "problem_19",
    "description": "Act as a Python developer and create a Python program that adheres to the flake8 coding standard. Here's an example snippet:\n\n# Example Snippet for Flake8\ndef find_max(numbers):\n    \"\"\"Find the maximum number in a list.\"\"\"\n    return max(numbers) if numbers else None\n\nEnsure your code is clean, readable, and adheres to flake8 standards. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: Global state,heapq,IdiomaticPython.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\nimport heapq\n\nclass GlobalState:\n    \"\"\"Class to represent a global state with a priority queue.\"\"\"\n    \n    def __init__(self):\n        self._priority_queue = []\n    \n    def add_item(self, item, priority):\n        \"\"\"Add an item with a given priority to the global state.\"\"\"\n        heapq.heappush(self._priority_queue, (priority, item))\n    \n    def get_highest_priority_item(self):\n        \"\"\"Get the item with the highest priority.\"\"\"\n        if self._priority_queue:\n            return heapq.heappop(self._priority_queue)[1]\n        return None\n\n    def is_empty(self):\n        \"\"\"Check if the priority queue is empty.\"\"\"\n        return len(self._priority_queue) == 0\n\n\ndef main():\n    \"\"\"Main function to demonstrate the usage of GlobalState.\"\"\"\n    global_state = GlobalState()\n    global_state.add_item('Task 1', 2)\n    global_state.add_item('Task 2', 1)\n    global_state.add_item('Task 3', 3)\n\n    while not global_state.is_empty():\n        task = global_state.get_highest_priority_item()\n        print(f'Processing {task}')\n\n\nif __name__ == \"__main__\":\n    main()\n",
    "tags": [
        "Global state",
        "heapq",
        "IdiomaticPython",
        "Hard"
    ],
    "keywords": [
        "Global state",
        "heapq",
        "IdiomaticPython"
    ],
    "difficulty": "Hard",
    "prompt_style_adherence": "flake8"
}