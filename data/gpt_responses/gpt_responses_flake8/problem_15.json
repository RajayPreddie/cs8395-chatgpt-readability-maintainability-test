{
    "id": "problem_15",
    "description": "Act as a Python developer and create a Python program that adheres to the flake8 coding standard. Here's an example snippet:\n\n# Example Snippet for Flake8\ndef find_max(numbers):\n    \"\"\"Find the maximum number in a list.\"\"\"\n    return max(numbers) if numbers else None\n\nEnsure your code is clean, readable, and adheres to flake8 standards. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: dict,frozenset.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\ndef create_frozenset_of_dicts(*dict_args):\n    \"\"\"Create a frozenset containing the given dictionaries.\"\"\"\n    return frozenset(dict_args)\n\n\ndef merge_dictionaries(dict_list):\n    \"\"\"Merge a list of dictionaries, giving precedence to key-value pairs in later dictionaries.\"\"\"\n    merged_dict = {}\n    for dictionary in dict_list:\n        merged_dict.update(dictionary)\n    return merged_dict\n\n\nif __name__ == \"__main__\":\n    # Example dictionaries\n    dict1 = {'a': 1, 'b': 2}\n    dict2 = {'b': 3, 'c': 4}\n    dict3 = {'d': 5}\n\n    # Create a frozenset of dictionaries\n    dictionaries_frozenset = create_frozenset_of_dicts(dict1, dict2, dict3)\n\n    # Convert frozenset back to list to merge\n    dictionaries_list = list(dictionaries_frozenset)\n\n    # Merge dictionaries\n    merged_result = merge_dictionaries(dictionaries_list)\n\n    print(\"Frozenset of dictionaries:\", dictionaries_frozenset)\n    print(\"Merged dictionary:\", merged_result)\n",
    "tags": [
        "dict",
        "frozenset",
        "Medium"
    ],
    "keywords": [
        "dict",
        "frozenset"
    ],
    "difficulty": "Medium",
    "prompt_style_adherence": "flake8"
}