{
    "id": "problem_7",
    "description": "Act as a Python developer and write a Python program that strictly adheres to the Black coding style. Here's an example snippet formatted using Black:\n\ndef format_name(first_name, last_name):\n    formatted_first_name = first_name.strip().title()\n    formatted_last_name = last_name.strip().title()\n    return f\"{formatted_first_name} {formatted_last_name}\"\n\nEnsure the code is formatted according to Black's uncompromising style. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: Concurrency.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\nimport concurrent.futures\nimport requests\n\n\ndef fetch_url(url):\n    try:\n        response = requests.get(url, timeout=5)\n        return url, response.status_code\n    except requests.RequestException as e:\n        return url, str(e)\n\n\ndef main(urls):\n    with concurrent.futures.ThreadPoolExecutor(max_workers=5) as executor:\n        future_to_url = {executor.submit(fetch_url, url): url for url in urls}\n        for future in concurrent.futures.as_completed(future_to_url):\n            url = future_to_url[future]\n            try:\n                url, status = future.result()\n                print(f\"{url} - {status}\")\n            except Exception as exc:\n                print(f\"{url} generated an exception: {exc}\")\n\n\nif __name__ == \"__main__\":\n    urls_to_fetch = [\n        \"http://www.google.com\",\n        \"http://www.example.com\",\n        \"http://www.github.com\",\n        \"http://nonexistent.url\",\n        # Add more URLs as needed\n    ]\n    main(urls_to_fetch)\n",
    "tags": [
        "Concurrency",
        "Easy"
    ],
    "keywords": [
        "Concurrency"
    ],
    "difficulty": "Easy",
    "prompt_style_adherence": "black"
}