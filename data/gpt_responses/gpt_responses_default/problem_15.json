{
    "id": "problem_15",
    "description": "Act as a Python developer and create a Python program. Ensure your code is clean and readable. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: dict,frozenset.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\ndef count_unique_items(list_of_items):\n    \"\"\"\n    Counts the number of unique items in a list using a dictionary\n    where keys are the unique items and values are their counts.\n    \"\"\"\n    item_counts = {}\n    for item in list_of_items:\n        # Convert item to frozenset because it's immutable and can be a dictionary key\n        item_frozenset = frozenset(item) if isinstance(item, list) else item\n        if item_frozenset in item_counts:\n            item_counts[item_frozenset] += 1\n        else:\n            item_counts[item_frozenset] = 1\n    return item_counts\n\nif __name__ == \"__main__\":\n    list_of_items = [\n        ['apple', 'banana'],\n        ['banana', 'apple'],\n        ['apple', 'banana'],\n        'orange',\n        'apple',\n        'orange',\n        ['grape', 'melon'],\n        ['melon', 'grape'],\n    ]\n\n    unique_counts = count_unique_items(list_of_items)\n    \n    # Display the count of unique items\n    for item, count in unique_counts.items():\n        # Convert frozenset back to list for display purposes\n        item_list = list(item) if isinstance(item, frozenset) else item\n        print(f\"Item: {item_list}, Count: {count}\")\n",
    "tags": [
        "dict",
        "frozenset",
        "Medium"
    ],
    "keywords": [
        "dict",
        "frozenset"
    ],
    "difficulty": "Medium",
    "prompt_style_adherence": "default"
}