{
    "id": "problem_13",
    "description": "Act as a Python developer and create a Python program. Ensure your code is clean and readable. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: DependencyInjection,Deque.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\nfrom collections import deque\nfrom typing import Deque, Any, Callable\n\nclass QueueManager:\n    def __init__(self):\n        self._queue: Deque[Any] = deque()\n\n    def enqueue(self, item: Any):\n        self._queue.append(item)\n\n    def dequeue(self) -> Any:\n        if self._queue:\n            return self._queue.popleft()\n        else:\n            raise IndexError(\"Dequeue from an empty queue\")\n\n    def size(self) -> int:\n        return len(self._queue)\n\n    def is_empty(self) -> bool:\n        return len(self._queue) == 0\n\nclass Consumer:\n    def __init__(self, queue_manager: QueueManager, process: Callable[[Any], None]):\n        self.queue_manager = queue_manager\n        self.process = process\n\n    def consume(self):\n        while not self.queue_manager.is_empty():\n            item = self.queue_manager.dequeue()\n            self.process(item)\n\ndef process_item(item):\n    print(f\"Processing item: {item}\")\n\nif __name__ == \"__main__\":\n    queue_manager = QueueManager()\n    consumer = Consumer(queue_manager, process_item)\n\n    # Enqueue some items\n    for i in range(5):\n        queue_manager.enqueue(i)\n\n    # Start consuming items\n    consumer.consume()\n",
    "tags": [
        "DependencyInjection",
        "Deque",
        "Medium"
    ],
    "keywords": [
        "DependencyInjection",
        "Deque"
    ],
    "difficulty": "Medium",
    "prompt_style_adherence": "default"
}