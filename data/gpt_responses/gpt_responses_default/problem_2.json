{
    "id": "problem_2",
    "description": "Act as a Python developer and create a Python program. Ensure your code is clean and readable. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: asyncio.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\nimport asyncio\n\nasync def print_after_delay(msg, delay):\n    \"\"\"Print a message after a given delay.\"\"\"\n    await asyncio.sleep(delay)\n    print(msg)\n\nasync def main():\n    # Schedule three messages to be printed with different delays\n    task1 = asyncio.create_task(print_after_delay(\"First message (after 2 seconds)\", 2))\n    task2 = asyncio.create_task(print_after_delay(\"Second message (after 4 seconds)\", 4))\n    task3 = asyncio.create_task(print_after_delay(\"Third message (after 6 seconds)\", 6))\n\n    # Wait until all tasks are completed\n    await task1\n    await task2\n    await task3\n\n# Run the main function using asyncio's event loop\nasyncio.run(main())\n",
    "tags": [
        "asyncio",
        "Easy"
    ],
    "keywords": [
        "asyncio"
    ],
    "difficulty": "Easy",
    "prompt_style_adherence": "default"
}