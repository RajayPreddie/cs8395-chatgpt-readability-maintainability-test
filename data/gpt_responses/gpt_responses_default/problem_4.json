{
    "id": "problem_4",
    "description": "Act as a Python developer and create a Python program. Ensure your code is clean and readable. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: bytes,ChainMap,Comprehension.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\nfrom collections import ChainMap\n\ndef bytes_to_hex_str(bytes_obj):\n    return ''.join(f'{byte:02x}' for byte in bytes_obj)\n\ndef main():\n    # Define two dictionaries with some settings\n    default_settings = {'theme': 'light', 'language': 'en', 'timeout': 10}\n    user_settings = {'theme': 'dark', 'language': 'es'}\n\n    # Create a ChainMap to search user_settings first, then default_settings\n    settings = ChainMap(user_settings, default_settings)\n\n    # Generate a random bytes object and convert it to a hexadecimal string using comprehension\n    random_bytes = bytes([45, 59, 75, 89, 105, 120])\n    hex_str = bytes_to_hex_str(random_bytes)\n\n    print(\"Settings:\")\n    for key, value in settings.items():\n        print(f'{key}: {value}')\n    \n    print(\"\\nRandom bytes in hexadecimal:\")\n    print(hex_str)\n\nif __name__ == \"__main__\":\n    main()\n",
    "tags": [
        "bytes",
        "ChainMap",
        "Comprehension",
        "Hard"
    ],
    "keywords": [
        "bytes",
        "ChainMap",
        "Comprehension"
    ],
    "difficulty": "Hard",
    "prompt_style_adherence": "default"
}