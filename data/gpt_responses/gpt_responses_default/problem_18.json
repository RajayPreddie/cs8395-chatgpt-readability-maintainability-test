{
    "id": "problem_18",
    "description": "Act as a Python developer and create a Python program. Ensure your code is clean and readable. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: Generator,Global state,heapq.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\nimport heapq\n\n# Define a generator function that will yield the next smallest number from a list\ndef next_smallest(numbers):\n    # Convert the list to a heap to maintain global state across generator invocations\n    heapq.heapify(numbers)\n    while numbers:\n        # Yield the smallest number and maintain the heap property\n        yield heapq.heappop(numbers)\n\n# Example usage\nif __name__ == \"__main__\":\n    # Sample list of numbers\n    numbers = [5, 3, 8, 1, 2, 9, 4, 7, 6]\n    # Create a generator object\n    smallest_numbers = next_smallest(numbers)\n    \n    # Iterate through the generator and print the numbers\n    for number in smallest_numbers:\n        print(number)\n",
    "tags": [
        "Generator",
        "Global state",
        "heapq",
        "Hard"
    ],
    "keywords": [
        "Generator",
        "Global state",
        "heapq"
    ],
    "difficulty": "Hard",
    "prompt_style_adherence": "default"
}