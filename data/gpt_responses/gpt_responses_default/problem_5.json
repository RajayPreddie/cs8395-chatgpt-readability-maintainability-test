{
    "id": "problem_5",
    "description": "Act as a Python developer and create a Python program. Ensure your code is clean and readable. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: ChainMap,Comprehension,Concurrency.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\nimport concurrent.futures\nfrom collections import ChainMap\n\ndef calculate_square(number):\n    return number * number\n\ndef main():\n    numbers = range(10)\n    \n    # Use concurrency for calculation of squares\n    with concurrent.futures.ThreadPoolExecutor() as executor:\n        squares = list(executor.map(calculate_square, numbers))\n\n    # Create two dictionaries using comprehension\n    original_numbers = {number: number for number in numbers}\n    squared_numbers = {number: square for number, square in zip(numbers, squares)}\n\n    # Combine the dictionaries using ChainMap\n    combined_maps = ChainMap(squared_numbers, original_numbers)\n\n    # Display the results\n    for key, value in combined_maps.items():\n        print(f\"{key}: {value}\")\n\nif __name__ == \"__main__\":\n    main()\n",
    "tags": [
        "ChainMap",
        "Comprehension",
        "Concurrency",
        "Hard"
    ],
    "keywords": [
        "ChainMap",
        "Comprehension",
        "Concurrency"
    ],
    "difficulty": "Hard",
    "prompt_style_adherence": "default"
}