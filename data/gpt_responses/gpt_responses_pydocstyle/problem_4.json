{
    "id": "problem_4",
    "description": "Act as a Python developer and write a Python program that strictly adheres to the pydocstyle standard for docstrings. Here's an example snippet:\n\n\"\"\"Module for demonstrating pydocstyle adherence.\n\nThis module provides examples of how to write docstrings that conform to pydocstyle standards.\n\"\"\"\n\ndef add_numbers(x, y):\n    \"\"\"Add two numbers and return the result.\n\n    :param x: The first number to add.\n    :param y: The second number to add.\n    :return: The sum of x and y.\n    \"\"\"\n    return x + y\n\nFocus on comprehensive and compliant docstring documentation. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: bytes.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\ndef convert_string_to_bytes(string_data, encoding='utf-8'):\n    \"\"\"Convert a string to bytes using a specified encoding.\n\n    This function takes a string and converts it into a bytes object\n    using the provided encoding scheme. UTF-8 is the default encoding\n    if none is specified.\n\n    :param string_data: The string to be converted into bytes.\n    :type string_data: str\n    :param encoding: The encoding to use for conversion (default is 'utf-8').\n    :type encoding: str\n    :return: The bytes representation of the input string.\n    :rtype: bytes\n    \"\"\"\n    return string_data.encode(encoding)\n\n\ndef main():\n    \"\"\"Run the main function of the module.\"\"\"\n    sample_string = \"Hello, World!\"\n    bytes_data = convert_string_to_bytes(sample_string)\n    print(f\"String: {sample_string}\")\n    print(f\"Bytes: {bytes_data}\")\n\n\nif __name__ == \"__main__\":\n    main()\n",
    "tags": [
        "bytes",
        "Easy"
    ],
    "keywords": [
        "bytes"
    ],
    "difficulty": "Easy",
    "prompt_style_adherence": "pydocstyle"
}