{
    "id": "problem_5",
    "description": "Act as a Python developer and write a Python program that strictly adheres to the pydocstyle standard for docstrings. Here's an example snippet:\n\n\"\"\"Module for demonstrating pydocstyle adherence.\n\nThis module provides examples of how to write docstrings that conform to pydocstyle standards.\n\"\"\"\n\ndef add_numbers(x, y):\n    \"\"\"Add two numbers and return the result.\n\n    :param x: The first number to add.\n    :param y: The second number to add.\n    :return: The sum of x and y.\n    \"\"\"\n    return x + y\n\nFocus on comprehensive and compliant docstring documentation. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: ChainMap.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\nfrom collections import ChainMap\n\ndef merge_dictionaries(dict1, dict2):\n    \"\"\"Merge two dictionaries using ChainMap and return the result.\n\n    This function takes two dictionaries and merges them into a single dictionary.\n    In case of key overlap, values from the first dictionary are preferred.\n\n    :param dict1: The first dictionary to merge.\n    :param dict2: The second dictionary to merge.\n    :return: A merged dictionary with the combined key-value pairs.\n    \"\"\"\n    merged_dict = ChainMap(dict1, dict2)\n    return merged_dict\n\ndef main():\n    \"\"\"Run the main function to demonstrate dictionary merging.\"\"\"\n    dict_a = {'a': 1, 'b': 2}\n    dict_b = {'b': 3, 'c': 4}\n\n    result = merge_dictionaries(dict_a, dict_b)\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n",
    "tags": [
        "ChainMap",
        "Easy"
    ],
    "keywords": [
        "ChainMap"
    ],
    "difficulty": "Easy",
    "prompt_style_adherence": "pydocstyle"
}