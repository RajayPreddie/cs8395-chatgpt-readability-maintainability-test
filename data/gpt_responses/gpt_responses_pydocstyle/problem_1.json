{
    "id": "problem_1",
    "description": "Act as a Python developer and write a Python program that strictly adheres to the pydocstyle standard for docstrings. Here's an example snippet:\n\n\"\"\"Module for demonstrating pydocstyle adherence.\n\nThis module provides examples of how to write docstrings that conform to pydocstyle standards.\n\"\"\"\n\ndef add_numbers(x, y):\n    \"\"\"Add two numbers and return the result.\n\n    :param x: The first number to add.\n    :param y: The second number to add.\n    :return: The sum of x and y.\n    \"\"\"\n    return x + y\n\nFocus on comprehensive and compliant docstring documentation. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: list.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\ndef filter_even_numbers(number_list):\n    \"\"\"Filter even numbers from a list.\n\n    This function takes a list of integers and returns a new list containing only the even numbers.\n\n    :param number_list: List of integers to be filtered.\n    :return: A list containing only the even numbers from the input list.\n    \"\"\"\n    return [number for number in number_list if number % 2 == 0]\n\n\ndef main():\n    \"\"\"Run the main function of the module.\n\n    This function calls the filter_even_numbers function with a sample list of numbers and prints the result.\n    \"\"\"\n    sample_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    even_numbers = filter_even_numbers(sample_list)\n    print(f\"The even numbers in the sample list are: {even_numbers}\")\n\n\nif __name__ == \"__main__\":\n    main()\n",
    "tags": [
        "list",
        "Easy"
    ],
    "keywords": [
        "list"
    ],
    "difficulty": "Easy",
    "prompt_style_adherence": "pydocstyle"
}