{
    "id": "problem_6",
    "description": "Act as a Python developer and write a Python program that strictly adheres to the pylint coding standard. Here's an example snippet compliant with pylint:\n\n\"\"\"Module for demonstrating pylint adherence.\n\nThis module provides an example function formatted to comply with pylint standards.\n\"\"\"\n\ndef calculate_sum(a, b):\n    \"\"\"Calculate and return the sum of two numbers.\"\"\"\n    return a + b\n\nFocus on clean, readable code following the style of the provided snippet. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: Comprehension.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\"\"\"Module for demonstrating list comprehension usage.\n\nThis module provides a function that utilizes list comprehension to filter and process data in a list.\n\"\"\"\n\ndef filter_and_square_evens(numbers):\n    \"\"\"Filter even numbers from a list and return their squares.\n\n    Args:\n        numbers (list): A list of integers.\n\n    Returns:\n        list: A list of squares of the even numbers from the input list.\n    \"\"\"\n    return [number ** 2 for number in numbers if number % 2 == 0]\n\n# Example usage:\nif __name__ == \"__main__\":\n    input_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    result = filter_and_square_evens(input_numbers)\n    print(result)  # Output: [4, 16, 36, 64, 100]",
    "tags": [
        "Comprehension",
        "Easy"
    ],
    "keywords": [
        "Comprehension"
    ],
    "difficulty": "Easy",
    "prompt_style_adherence": "pylint"
}