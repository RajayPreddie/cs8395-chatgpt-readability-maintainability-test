{
    "id": "problem_14",
    "description": "Act as a Python developer and write a Python program that strictly adheres to the pylint coding standard. Here's an example snippet compliant with pylint:\n\n\"\"\"Module for demonstrating pylint adherence.\n\nThis module provides an example function formatted to comply with pylint standards.\n\"\"\"\n\ndef calculate_sum(a, b):\n    \"\"\"Calculate and return the sum of two numbers.\"\"\"\n    return a + b\n\nFocus on clean, readable code following the style of the provided snippet. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keyword(s) to solve a problem with Python: Deque,dict.Remember to only respond with the raw code for the Python program. Generate a Python program that uses the keyword(s) for inspiration on the type of problem to solve. Only return the code that you would write in a .py file. Do not output in Markdown format.\n\n",
    "code": "\n\"\"\"Module for demonstrating the use of Deque and Dict in Python.\n\nThis module provides a function to maintain a record of unique items\nwith their counts using a deque for efficient appends and pops, and\na dictionary for fast lookups.\n\"\"\"\n\nfrom collections import deque\n\ndef record_items(items):\n    \"\"\"Record each unique item and count their occurrences.\n\n    Args:\n        items (iterable): An iterable of items to record.\n\n    Returns:\n        dict: A dictionary with items as keys and their counts as values.\n    \"\"\"\n    item_counts = {}\n    unique_items = deque()\n\n    for item in items:\n        if item not in item_counts:\n            unique_items.append(item)\n            item_counts[item] = 1\n        else:\n            item_counts[item] += 1\n\n    return dict(unique_items=unique_items, item_counts=item_counts)\n\nif __name__ == \"__main__\":\n    items_to_record = ['apple', 'banana', 'apple', 'orange', 'banana', 'apple']\n    recorded_data = record_items(items_to_record)\n    print(\"Unique Items:\", recorded_data['unique_items'])\n    print(\"Item Counts:\", recorded_data['item_counts'])\n",
    "tags": [
        "Deque",
        "dict",
        "Medium"
    ],
    "keywords": [
        "Deque",
        "dict"
    ],
    "difficulty": "Medium",
    "prompt_style_adherence": "pylint"
}