{
    "id": "problem_15",
    "description": "Act as a Python developer and create a Python program. Ensure your code is clean and readable. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keywords to solve a problem with Python: dict,frozenset. Remember to only respond with the raw code for the Python program. Generate a Python program that uses a list and return only the raw code. If you have explanations or comments, include them in the code as comments.\n",
    "code": "def count_unique_items(item_list):\n    \"\"\"\n    This function takes a list of items and returns a dictionary with the count of unique items using frozenset.\n    \"\"\"\n    # Convert the list into a frozenset to get unique items\n    unique_items = frozenset(item_list)\n    \n    # Initialize an empty dictionary to store the count of each unique item\n    item_count = dict()\n    \n    # Iterate over the unique items and count their occurrences in the original list\n    for item in unique_items:\n        item_count[item] = item_list.count(item)\n    \n    return item_count\n\n# Example usage:\nif __name__ == \"__main__\":\n    # Define a list with some duplicate items\n    items = [\"apple\", \"banana\", \"apple\", \"orange\", \"banana\", \"banana\"]\n    \n    # Call the function and store the result\n    unique_item_count = count_unique_items(items)\n    \n    # Print the result\n    print(unique_item_count)\n",
    "tags": [
        "dict",
        "frozenset",
        "Medium"
    ],
    "keywords": [
        "dict",
        "frozenset"
    ],
    "difficulty": "Medium",
    "prompt_style_adherence": "default"
}