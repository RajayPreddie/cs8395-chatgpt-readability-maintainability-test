{
    "id": "problem_8",
    "description": "Act as a Python developer and create a Python program. Ensure your code is clean and readable. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keywords to solve a problem with Python: ContextManager. Remember to only respond with the raw code for the Python program. Generate a Python program that uses a list and return only the raw code. If you have explanations or comments, include them in the code as comments.\n",
    "code": "# A Python program that uses a ContextManager to manage a list\n\nclass ListManager:\n    def __init__(self, initial_list=None):\n        \"\"\"Initialize the context manager with an optional initial list.\"\"\"\n        self.list = initial_list or []\n\n    def __enter__(self):\n        \"\"\"Enter the runtime context and return the list.\"\"\"\n        return self.list\n\n    def __exit__(self, exc_type, exc_value, traceback):\n        \"\"\"Exit the runtime context and clean up if necessary.\"\"\"\n        # Here we could add any cleanup code if needed\n        pass\n\n# Usage example\nif __name__ == \"__main__\":\n    with ListManager([1, 2, 3]) as my_list:\n        print(f\"Original list: {my_list}\")\n        my_list.append(4)\n        my_list.append(5)\n        print(f\"Modified list: {my_list}\")\n",
    "tags": [
        "ContextManager",
        "Easy"
    ],
    "keywords": [
        "ContextManager"
    ],
    "difficulty": "Easy",
    "prompt_style_adherence": "default"
}