{
    "id": "problem_10",
    "description": "Act as a Python developer and write a Python program that strictly adheres to the Black coding style. Here's an example snippet formatted using Black:\n\ndef format_name(first_name, last_name):\n    formatted_first_name = first_name.strip().title()\n    formatted_last_name = last_name.strip().title()\n    return f\"{formatted_first_name} {formatted_last_name}\"\n\nEnsure the code is formatted according to Black's uncompromising style. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keywords to solve a problem with Python: Counter. Remember to only respond with the raw code for the Python program. Generate a Python program that uses a list and return only the raw code. If you have explanations or comments, include them in the code as comments.\n",
    "code": "from collections import Counter\n\n# Define a function to count the occurrences of each element in a list\ndef count_elements(input_list):\n    # Use Counter to count occurrences of each element\n    element_counts = Counter(input_list)\n    return element_counts\n\n# Example usage of the function\nif __name__ == \"__main__\":\n    example_list = [\"apple\", \"banana\", \"apple\", \"orange\", \"banana\", \"apple\"]\n    counts = count_elements(example_list)\n    for element, count in counts.items():\n        print(f\"{element}: {count}\")\n",
    "tags": [
        "Counter",
        "Easy"
    ],
    "keywords": [
        "Counter"
    ],
    "difficulty": "Easy",
    "prompt_style_adherence": "black"
}