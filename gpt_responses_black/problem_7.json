{
    "id": "problem_7",
    "description": "Act as a Python developer and write a Python program that strictly adheres to the Black coding style. Here's an example snippet formatted using Black:\n\ndef format_name(first_name, last_name):\n    formatted_first_name = first_name.strip().title()\n    formatted_last_name = last_name.strip().title()\n    return f\"{formatted_first_name} {formatted_last_name}\"\n\nEnsure the code is formatted according to Black's uncompromising style. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keywords to solve a problem with Python: Concurrency. Remember to only respond with the raw code for the Python program. Generate a Python program that uses a list and return only the raw code. If you have explanations or comments, include them in the code as comments.\n",
    "code": "import concurrent.futures\n\n# Function to process data concurrently\ndef process_data(item):\n    # Replace this with actual data processing logic\n    return item * item\n\ndef main():\n    # List of items to process\n    items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n    # Using ThreadPoolExecutor to process items concurrently\n    with concurrent.futures.ThreadPoolExecutor() as executor:\n        # Map the process_data function to the items\n        results = executor.map(process_data, items)\n\n        # Print the results as they are completed\n        for result in results:\n            print(result)\n\nif __name__ == \"__main__\":\n    main()\n",
    "tags": [
        "Concurrency",
        "Easy"
    ],
    "keywords": [
        "Concurrency"
    ],
    "difficulty": "Easy",
    "prompt_style_adherence": "black"
}