{
    "id": "problem_4",
    "description": "Act as a Python developer and write a Python program that strictly adheres to the Black coding style. Here's an example snippet formatted using Black:\n\ndef format_name(first_name, last_name):\n    formatted_first_name = first_name.strip().title()\n    formatted_last_name = last_name.strip().title()\n    return f\"{formatted_first_name} {formatted_last_name}\"\n\nEnsure the code is formatted according to Black's uncompromising style. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keywords to solve a problem with Python: bytes. Remember to only respond with the raw code for the Python program. Generate a Python program that uses a list and return only the raw code. If you have explanations or comments, include them in the code as comments.\n",
    "code": "def bytes_to_string(byte_list):\n    # Convert a list of bytes to a list of strings\n    string_list = [b.decode(\"utf-8\") for b in byte_list]\n    return string_list\n\ndef main():\n    # List of bytes to be converted\n    sample_bytes_list = [b'Python', b'is', b'fun!']\n    \n    # Convert bytes to strings\n    converted_strings = bytes_to_string(sample_bytes_list)\n    \n    # Print the converted list of strings\n    for string in converted_strings:\n        print(string)\n\n# Check if the script is run directly\nif __name__ == \"__main__\":\n    main()\n```\n",
    "tags": [
        "bytes",
        "Easy"
    ],
    "keywords": [
        "bytes"
    ],
    "difficulty": "Easy",
    "prompt_style_adherence": "black"
}