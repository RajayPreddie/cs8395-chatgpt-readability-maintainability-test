{
    "id": "problem_8",
    "description": "Act as a Python developer and create a Python program that adheres to the flake8 coding standard. Here's an example snippet:\n\n# Example Snippet for Flake8\ndef find_max(numbers):\n    \"\"\"Find the maximum number in a list.\"\"\"\n    return max(numbers) if numbers else None\n\nEnsure your code is clean, readable, and adheres to flake8 standards. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keywords to solve a problem with Python: ContextManager. Remember to only respond with the raw code for the Python program. Generate a Python program that uses a list and return only the raw code. If you have explanations or comments, include them in the code as comments.\n",
    "code": "from contextlib import ContextManager\n\n\nclass ListContextManager(ContextManager):\n    \"\"\"Context manager for operations with a list.\"\"\"\n    \n    def __init__(self, initial_list=None):\n        \"\"\"Initialize the context manager with an initial list or an empty list.\"\"\"\n        self.list = initial_list if initial_list is not None else []\n\n    def __enter__(self):\n        \"\"\"Enter the runtime context and return the list.\"\"\"\n        return self.list\n\n    def __exit__(self, exc_type, exc_value, traceback):\n        \"\"\"Exit the runtime context.\"\"\"\n        # Handle any cleanup here if necessary\n        pass\n\n\n# Usage example\nif __name__ == \"__main__\":\n    with ListContextManager([1, 2, 3, 4, 5]) as number_list:\n        # Perform some operations with the list\n        max_number = max(number_list)\n        print(f\"The maximum number in the list is: {max_number}\")\n",
    "tags": [
        "ContextManager",
        "Easy"
    ],
    "keywords": [
        "ContextManager"
    ],
    "difficulty": "Easy",
    "prompt_style_adherence": "flake8"
}