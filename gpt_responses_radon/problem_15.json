{
    "id": "problem_15",
    "description": "Act as a Python developer and write a Python program with a focus on maintainable and low-complexity code as measured by radon. Here's a more complex example snippet with low cyclomatic complexity:\n\n# Example Snippet for Radon\ndef fibonacci(n):\n    \"\"\"Return the nth Fibonacci number.\"\"\"\n    if n <= 1:\n        return n\n    return fibonacci(n - 1) + fibonacci(n - 2)\n\ndef main():\n    for i in range(10):\n        print(fibonacci(i))\n\nif __name__ == \"__main__\":\n    main()\n\nStrive for a simple and clear code structure, minimizing cyclomatic complexity. Return only the raw code for the Python program, ensuring it's functional and follows Python best practices. Verify the program's correctness as if using a Command Line Interface. Use the following keywords to solve a problem with Python: dict,frozenset. Remember to only respond with the raw code for the Python program. Generate a Python program that uses a list and return only the raw code. If you have explanations or comments, include them in the code as comments.\n",
    "code": "def create_frozenset_from_list(lst):\n    \"\"\"Create and return a frozenset from the given list.\"\"\"\n    return frozenset(lst)\n\ndef create_dict_from_frozenset(fset):\n    \"\"\"Create a dictionary where each element of the frozenset is a key and its value is True.\"\"\"\n    return {element: True for element in fset}\n\ndef main():\n    # List of elements\n    elements = ['apple', 'banana', 'cherry', 'date', 'fig', 'grape']\n\n    # Create a frozenset from the list\n    unique_elements = create_frozenset_from_list(elements)\n\n    # Create a dictionary from the frozenset\n    element_dict = create_dict_from_frozenset(unique_elements)\n\n    # Print the dictionary\n    for key, value in element_dict.items():\n        print(f\"{key}: {value}\")\n\n# Run the program\nif __name__ == \"__main__\":\n    main()\n",
    "tags": [
        "dict",
        "frozenset",
        "Medium"
    ],
    "keywords": [
        "dict",
        "frozenset"
    ],
    "difficulty": "Medium",
    "prompt_style_adherence": "radon"
}